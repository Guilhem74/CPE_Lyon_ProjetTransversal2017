C51 COMPILER V9.52.0.0   MAIN                                                              02/28/2017 09:56:16 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Programmes\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //---------------------------------------------------------------------------------------
   2          // ID_1.1    Test_Ring_Buffer.C -----------------------------------------------------
   3          //---------------------------------------------------------------------------------------
   4          // ID_1.2  
   5          //
   6          // ID_1.3 Auteur F.JOLY - CPE Lyon
   7          // ID_1.4 DATE: 08 Mars 2016 
   8          // ID_1.5 Version 1.0 
   9          // 
  10          // ID_1.6 Objectifs ---------------------------------------------------------------------
  11          // Programme de démo pour la mise en oeuvre du la librairie UART0_RingBuffer
  12          // 
  13          // ID_1.7 Dépendances matérielles "cible" ----------------------------------------------- 
  14          // Processeur cible: C8051F02x
  15          
  16          // ID_1.8 Dépendances matérielles "extérieures" -----------------------------------------
  17          // Utilisation d'un Bouton Poussoir sur P3.7
  18          // Utilisation d'un oscillateur externe (Quartz)
  19          
  20          // ID_1.9 Dépendances de type communications/protocolaires ------------------------------
  21          // Ce code reçoit et envoie des données sur la liaison série asynchrone UART0
  22          // ID_1.10 Fonctionnement du code -------------------------------------------------------
  23          // Le code est destiné à montrer le fonctionnement de la librairie UART0_RingBuffer
  24          // Chaque donnée reçue sur la liaison série est stockée dans un buffer circulaire.
  25          // A chaque appui sur le Bouton Poussoir les données dans le buffer de réception sont lues 
  26          // et envoyées dans le buffer de transmission.
  27          
  28          // ID_1.11 Choix technologiques divers --------------------------------------------------
  29          
  30          
  31          // ID_1.12 Tests réalisés ---------------------------------------------------------------
  32          // Validation sur plateforme 8051F020TB avec processeur 8051F020
  33          // Vitesse de transmission: 115200 Baud
  34          // Fréquence quartz: 22,1184 MHz
  35          //
  36          // ID_1.13 Chaine de compilation --------------------------------------------------------
  37          // KEIL C51 6.03 / KEIL EVAL C51
  38          //
  39          // ID_1.14 Documentation de référence ---------------------------------------------------
  40          // Datasheet 8051F020/1/2/3  Preliminary Rev. 1.4 12/03 
  41          //
  42          //ID_1.15 Commentaires sur les variables globales et les constantes ---------------------
  43          
  44          
  45          //*************************************************************************************************
  46          #include <c8051f020.h>                    // SFR declarations
  47          #include <stdio.h>
  48          #include <intrins.h>
  49          #include <string.h>
  50          #include <LIB_PROJET_T_Config_Globale.h>
  51          #include <UART0_RingBuffer_lib.h>
  52          #ifndef CFG_Globale
  53            #define CFG_Globale
  54            #include <CFG_Globale.h>
  55          #endif
C51 COMPILER V9.52.0.0   MAIN                                                              02/28/2017 09:56:16 PAGE 2   

  56          
  57          sbit BP = P3^7;     
  58          
  59          
  60          
  61          
  62          
  63          void main(void) {
  64   1         char  c;
  65   1        Init_Device();
  66   1           cfg_Clock_UART();
  67   1           cfg_UART0_mode1();
  68   1           init_Serial_Buffer();                            
  69   1           EA = 1;                              /* allow interrupts to happen */
  70   1           serOutstring("Test_Buffer_Circulaire\n\r");
  71   1        
  72   1      while(1) {
  73   2          
  74   2        
  75   2          while ((c=serInchar())!=0) serOutchar(c);
  76   2          
  77   2        }
  78   1      } /* main */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     36    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
